name: Eiko
permissions:
  id-token: write
  contents: read
  checks: write
on:
  push:
  workflow_dispatch:
jobs:
  filter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: test-filter
        with:
          filters: |
            test:
              - 'netcode/res/**'
              - 'netcode/test/**'
              - 'netcode/src/**'
              - 'netcode/eiko-scm-1.rockspec'
      - uses: dorny/paths-filter@v3
        id: windows-filter
        with:
          filters: |
            windows:
              - 'netcode/res/**'
              - 'netcode/src/**'
              - 'netcode/mingw-w64-ucrt-x86_64/**'
      - uses: dorny/paths-filter@v3
        id: docker-filter
        with:
          filters: |
            docker:
              - 'netcode/res/**'
              - 'netcode/src/**'
              - 'netcode/eiko-scm-1.rockspec'
              - 'netcode/docker-ubuntu/**'
    outputs:
      test: ${{ steps.test-filter.outputs.test }}
      windows: ${{ steps.windows-filter.outputs.windows }}
      docker: ${{ steps.docker-filter.outputs.docker }}
  test:
    needs:
      - filter
    if: ${{ !failure() && !cancelled() && needs.filter.outputs.test == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: luajit
      - uses: leafo/gh-actions-luarocks@v4
      - name: Dependencies
        working-directory: netcode      
        run: sudo apt update -y && xargs sudo apt install -y < .devcontainer/scripts/packages.txt
      - name: Build
        working-directory: netcode      
        run: luarocks make --server rocks
      - name: Test
        working-directory: netcode      
        run:  luarocks test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Lua tests
          path: netcode/reports/*.xml
          reporter: java-junit
  release-windows:
    needs:
      - filter
      - test
    if: ${{ !failure() && !cancelled() && needs.filter.outputs.windows == 'true'}}
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
      - name: Build
        working-directory: netcode      
        run: mingw-w64-ucrt-x86_64/build.sh
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: netcode/eiko.zip
  release-docker:
    needs:
      - filter
      - test
    if: ${{ !failure() && !cancelled() && needs.filter.outputs.docker == 'true'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: netcode
          push: true
          file: docker-ubuntu/Dockerfile
          tags: dianakatana/eiko:${{ steps.extract_branch.outputs.branch }}
